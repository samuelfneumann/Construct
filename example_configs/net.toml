# This file is an example configuration file on how to construct a
# convolutional neural network using PyTorch. In this file, a lot of features
# of Construct.py are shown. I don't recommend mixing so many features, but I
# have added them here as an example.
[0]
type = "torch.nn.Sequential"

# First layer is a convolutional layer
[0.0]
type = "torch.nn.Conv2d"
args = [1, 10, 3]

# Then we add a ReLU nonlinearity
[0.1]
type = "torch.nn.ReLU"

# We flatten the output of the convolutional layer
# Use a generic type to construct a torch.nn.Flatten. This is not recommended,
# but is here to showcase the functionality of the generic type.
[0.2]
type = "generic"
args = ["<-torch.nn.Flatten()"]

# Then add a linear layer
[0.3]
type = "torch.nn.Linear"
args = ["<-constant(2)", 5]

# Don't use a bias for the linear layer
[0.3.kwargs]
bias = false

# Then we have another ReLU nonlinearity
[0.4]
type = "torch.nn.ReLU"

# Followed by a linear layer
[0.5]
type = "torch.nn.Linear"
args = ["<-constant(5)", 1]

# And finally, use a bias on the last layer
[0.5.bias]
type = "constant"
args = [true]

